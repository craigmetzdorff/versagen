@startuml
enum ECommandRunSpace {
    Disabled= 0,
    World= 1,
    Story= World << 1,
    Private= Story << 1,
    All= World | Story | Private,
}
enum EHandleRemainder {
    Discard= 0,
    AsString= 1,
    AsTokens= 2,
    AsType= 3,
    CustomFunction= 4,
}
abstract class "VersaCommandBase`1"<T> {
    + Name : string <<get>>
    + CommandLine : string <<get>> <<protected set>>
    + SeparatorChar : char <<get>>
    + RunSynchronously : bool <<get>>
    + Description : string <<get>>
    + <<virtual>> WithCommandLinePrefix(prependThis:string) : IVersaCommand
    + PrepRuleTasks(context:ICommandContext, provider:IServiceProvider) : IEnumerable<Func<Task<(bool passed, IConditionalRule rule, string failureReason)>>>
    + <<virtual>> Run(args:T, provider:IServiceProvider) : Task
    # VersaCommandBase(b:ICommandBuilder<T,VersaCommandBase<T>>)
    + {static} GetFromInterface(hiding:IVersaCommand<ICommandContext>) : (bool isHidden, VersaCommandBase<T> casted)
    + WithICommandContext() : IVersaCommand<ICommandContext>
}
class "IVersaCommand`1"<T> {
}
class "Func`3"<T1,T2,T3> {
}
class InterfaceNegotiator <<struct>> {
    + CommandLine : string <<get>>
    + Name : string <<get>>
    + RunSynchronously : bool <<get>>
    + SeparatorChar : char <<get>>
    + Description : string <<get>>
    - CheckContextOkay(inCon:ICommandContext) : (bool isRightType, T contextTyped)
    + WithCommandLinePrefix(prependThis:string) : IVersaCommand
    + PrepRuleTasks(context:ICommandContext, provider:IServiceProvider) : IEnumerable<Func<Task<(bool passed, IConditionalRule rule, string failureReason)>>>
    + Run(args:ICommandContext, provider:IServiceProvider) : Task
    + Run(args:ICommandContext, provider:IServiceProvider, scheduler:TaskScheduler) : Task
    <<internal>> InterfaceNegotiator(versCommand:VersaCommandBase<T>)
}
"IVersaCommand`1" "<T>" <|-- "VersaCommandBase`1"
"VersaCommandBase`1" --> "RunSpace" ECommandRunSpace
"VersaCommandBase`1" --> "Do<T,IServiceProvider,Task>" "Func`3"
"VersaCommandBase`1" --> "RequiredPrivilegdes" EVersaPerms
"VersaCommandBase`1" +-- InterfaceNegotiator
"IVersaCommand`1" "<ICommandContext>" <|-- InterfaceNegotiator
InterfaceNegotiator --> "baseCom<T>" "VersaCommandBase`1"
InterfaceNegotiator --> "RequiredPrivilegdes" EVersaPerms
InterfaceNegotiator --> "RunSpace" ECommandRunSpace
@enduml
